AWSTemplateFormatVersion: '2010-09-09'
Description: Creates a Code Pipeline

###############################################################################
Parameters:
###############################################################################

  Environment:
    Description: Enter deployment environment (dev, prod)
    Type: String
    AllowedValues: 
      - prod
      - dev
  TargetStack:
    Type: String
    Description: The name of the Stack for SAM Change sets
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: '[a-z0-9]*'
    Description: Token for GitHub authentication
  GitHubOwner:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
    Description: The owner of the GitHub repo
  GitHubRepo:
    Type: String
    Description: The name of the GitHub repo
  GitHubBranch:
    Type: String
    Default: master
    AllowedPattern: "[A-Za-z0-9-]+"
    Description: The name of the GitHub repo branch
  DeploymentBucket:
    Type: String
    Description: S3 bucket for deployment files
  BuildArtifactsBucket:
    Type: String
    Description: S3 bucket for artifact storage
  HostedZone:
    Description: Route53 hosted zone
    Type: String
  ApiDomainName:
    Description: Domain of API
    Type: String
  FrontendDomainName:
    Description: Domain of frontend web app
    Type: String
  FrontendRootBucketName:
    Description: S3 bucket for frontend web app
    Type: String
  FrontendLogBucketName:
    Description: S3 bucket for frontend web app logs
    Type: String
  AdminDomainName:
    Description: Domain of admin web app
    Type: String
  AdminRootBucketName:
    Description: S3 bucket for admin web app
    Type: String
  AdminLogBucketName:
    Description: S3 bucket for admin web app logs
    Type: String

###############################################################################
Resources:
###############################################################################

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${TargetStack}-pipeline
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables: 
          - Name: STAGE
            Type: PLAINTEXT
            Value: !Ref Environment
      Cache:
        Type: S3
        Location: !Sub ${BuildArtifactsBucket}/codebuild-cache
      ServiceRole: !Ref CodeBuildServiceRole
      Source:
        Type: CODEPIPELINE
      # TimeoutInMinutes: 10
      Tags: 
        - Key: Service
          Value: CICD
        - Key: Environment
          Value: !Ref Environment

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${TargetStack}-pipeline
      ArtifactStore:
        Type: S3
        Location: !Ref BuildArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineExecutionRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceCode
              Configuration:
                OAuthToken: !Ref GitHubOAuthToken
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: BuildArtifact
                - Name: FrontEndArtifact
                - Name: AdminArtifact
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${TargetStack}
                ChangeSetName: !Sub ${TargetStack}-change-set
                TemplatePath: BuildArtifact::template.yml
                ParameterOverrides: !Sub | 
                  {
                    "Environment": "${Environment}", 
                    "HostedZone": "${HostedZone}", 
                    "ApiDomainName": "${ApiDomainName}", 
                    "FrontendDomainName": "${FrontendDomainName}", 
                    "FrontendRootBucketName": "${FrontendRootBucketName}", 
                    "FrontendLogBucketName": "${FrontendLogBucketName}", 
                    "AdminDomainName": "${AdminDomainName}", 
                    "AdminRootBucketName": "${AdminRootBucketName}",
                    "AdminLogBucketName": "${AdminLogBucketName}"
                  }
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
              InputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${TargetStack}
                ChangeSetName: !Sub ${TargetStack}-change-set
              # OutputArtifacts:
              #   - Name: {{cookiecutter.project_name.lower().replace(' ', '-')}}GammaChangeSet
              RunOrder: 2
            - Name: DeployFrontend
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              InputArtifacts:
                - Name: FrontEndArtifact
              Configuration:
                BucketName: !Ref FrontendRootBucketName
                Extract: 'true'
              RunOrder: 3
            - Name: DeployAdmin
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              InputArtifacts:
                - Name: AdminArtifact
              Configuration:
                BucketName: !Ref AdminRootBucketName
                Extract: 'true'
              RunOrder: 3

  GithubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: true
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version

###############################################################################
# Permissions
###############################################################################

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${TargetStack}-pipeline'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${TargetStack}-pipeline:*'
        - PolicyName: CodeBuildArtifactsBucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
                Resource:
                  - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                  - !Sub 'arn:aws:s3:::${DeploymentBucket}/*'
        # - PolicyName: CodeBuildParameterStore
        #   PolicyDocument:
        #     Version: '2012-10-17'
        #     Statement:
        #       - Effect: Allow
        #         Action: 'ssm:GetParameters'
        #         Resource: '*'

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Principal:
              Service: cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess' # TODO: Limit permissions

  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Principal:
              Service: 
                - codepipeline.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                  - 'lambda:InvokeAsyc'
                Resource: '*'
        - PolicyName: CodePipelineCodeAndArtifactsS3Bucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 's3:*'
                Resource: 
                  - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                  - !Sub 'arn:aws:s3:::${FrontendRootBucketName}/*'
                  - !Sub 'arn:aws:s3:::${AdminRootBucketName}/*'
        - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Resource: 
                  - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProject}'
              - Effect: Allow
                Action: 
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'cloudformation:SetStackPolicy'
                  - 'cloudformation:ValidateTemplate'
                Resource: 
                  - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${TargetStack}*/*'
                  - !Sub 'arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31'
